<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-03-09T02:48:36.456Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Flex布局用法（Flexbox Froggy）</title>
    <link href="http://example.com/2022/03/09/Flex%E5%B8%83%E5%B1%80%E7%94%A8%E6%B3%95%EF%BC%88Flexbox-Froggy%EF%BC%89/"/>
    <id>http://example.com/2022/03/09/Flex%E5%B8%83%E5%B1%80%E7%94%A8%E6%B3%95%EF%BC%88Flexbox-Froggy%EF%BC%89/</id>
    <published>2022-03-09T02:28:20.000Z</published>
    <updated>2022-03-09T02:48:36.456Z</updated>
    
    <content type="html"><![CDATA[<h1 id="justify-content-属性"><a href="#justify-content-属性" class="headerlink" title="justify-content 属性"></a>justify-content 属性</h1><p><code>justify-content</code>用于设置或检索弹性盒子元素在主轴（横轴）方向上的对齐方式。</p><p>Welcome to Flexbox Froggy, a game where you help Froggy and friends by  writing CSS code! Guide this frog to the lilypad on the right by using  the <code>justify-content</code> property, which aligns items horizontally and accepts the following values:</p><ul><li><code>flex-start</code>: Items align to the left side of the container.</li><li><code>flex-end</code>: Items align to the right side of the container.</li><li><code>center</code>: Items align at the center of the container.</li><li><code>space-between</code>: Items display with equal spacing between them.</li><li><code>space-around</code>: Items display with equal spacing around them.</li></ul><h1 id="align-items-属性"><a href="#align-items-属性" class="headerlink" title="align-items 属性"></a>align-items 属性</h1><p><code>align-items</code>属性定义<strong>flex</strong>子项在<strong>flex</strong>容器的当前行的侧轴（纵轴）方向上的对齐方式。</p><p>Now use <code>align-items</code> to help the frogs get to the bottom of the pond. This CSS property aligns items vertically and accepts the following values:</p><ul><li><code>flex-start</code>: Items align to the top of the container.</li><li><code>flex-end</code>: Items align to the bottom of the container.</li><li><code>center</code>: Items align at the vertical center of the container.</li><li><code>baseline</code>: Items display at the baseline of the container.</li><li><code>stretch</code>: Items are stretched to fit the container.</li></ul><h1 id="flex-direction-属性"><a href="#flex-direction-属性" class="headerlink" title="flex-direction 属性"></a>flex-direction 属性</h1><p><code>flex-direction</code>属性规定灵活项目的方向。</p><p>The frogs need to get in the same order as their lilypads using <code>flex-direction</code>. This CSS property defines the direction items are placed in the container, and accepts the following values:</p><ul><li><code>row</code>: Items are placed the same as the text direction.</li><li><code>row-reverse</code>: Items are placed opposite to the text direction.</li><li><code>column</code>: Items are placed top to bottom.</li><li><code>column-reverse</code>: Items are placed bottom to top.</li></ul><h1 id="order-属性"><a href="#order-属性" class="headerlink" title="order 属性"></a>order 属性</h1><p>Sometimes reversing the row or column order of a container is not enough. In these cases, we can apply the <code>order</code> property to individual items. By default, items have a value of 0, but  we can use this property to also set it to a positive or negative  integer value (-2, -1, 0, 1, 2).</p><p>Use the <code>order</code> property to reorder the frogs according to their lilypads.</p><h1 id="align-self-属性"><a href="#align-self-属性" class="headerlink" title="align-self 属性"></a>align-self 属性</h1><p>Another property you can apply to individual items is <code>align-self</code>. This property accepts the same values as <code>align-items</code> and its value for the specific item.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;justify-content-属性&quot;&gt;&lt;a href=&quot;#justify-content-属性&quot; class=&quot;headerlink&quot; title=&quot;justify-content 属性&quot;&gt;&lt;/a&gt;justify-content 属性&lt;/h1&gt;&lt;p&gt;&lt;code&gt;</summary>
      
    
    
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
    <category term="Flex布局" scheme="http://example.com/tags/Flex%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>后端开发框架介绍（Springboot）</title>
    <link href="http://example.com/2022/03/02/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6%E4%BB%8B%E7%BB%8D%EF%BC%88Springboot%EF%BC%89/"/>
    <id>http://example.com/2022/03/02/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6%E4%BB%8B%E7%BB%8D%EF%BC%88Springboot%EF%BC%89/</id>
    <published>2022-03-02T07:05:20.000Z</published>
    <updated>2022-03-03T03:06:05.707Z</updated>
    
    <content type="html"><![CDATA[<h1 id="框架介绍"><a href="#框架介绍" class="headerlink" title="框架介绍"></a>框架介绍</h1><h2 id="Spring家族框架简介"><a href="#Spring家族框架简介" class="headerlink" title="Spring家族框架简介"></a>Spring家族框架简介</h2><h3 id="What-Spring-can-do"><a href="#What-Spring-can-do" class="headerlink" title="What Spring can do?"></a>What Spring can do?</h3><p><img src="/images/Spring.png" alt="What Spring can do?"></p><h3 id="Spring生态"><a href="#Spring生态" class="headerlink" title="Spring生态"></a>Spring生态</h3><p>覆盖了：</p><ul><li>web开发</li><li>数据访问</li><li>安全控制</li><li>分布式</li><li>消息服务</li><li>移动开发</li><li>批处理</li><li>……</li></ul><h2 id="框架简述"><a href="#框架简述" class="headerlink" title="框架简述"></a>框架简述</h2><p>Springboot可以帮助整合Spring的整个技术栈</p><h3 id="Why-Springboot？"><a href="#Why-Springboot？" class="headerlink" title="Why Springboot？"></a>Why Springboot？</h3><blockquote><p>Spring Boot makes it easy to create stand-alone, production-grade Spring based Applications that you can “just run”.</p><p>能快速创建出生产级别的Spring应用</p></blockquote><h3 id="Springboot优点"><a href="#Springboot优点" class="headerlink" title="Springboot优点"></a>Springboot优点</h3><ul><li>Create stand-alone Spring applications</li><li>Embed Tomcat, Jetty or Undertow directly (no need to deploy WAR files)</li><li>Provide opinionated ‘starter’ dependencies to simplify your build configuration</li><li>Automatically configure Spring and 3rd party libraries whenever possible</li><li>Provide production-ready features such as metrics, health checks, and externalized configuration</li><li>Absolutely no code generation and no requirement for XML configuration</li></ul><blockquote><p> SpringBoot是整合Spring技术栈的一站式框架</p><p> SpringBoot是简化Spring技术栈的快速开发脚手架</p></blockquote><h1 id="Web开发"><a href="#Web开发" class="headerlink" title="Web开发"></a>Web开发</h1><h2 id="框架搭建（HelloWorld）"><a href="#框架搭建（HelloWorld）" class="headerlink" title="框架搭建（HelloWorld）"></a>框架搭建（HelloWorld）</h2><ul><li>创建maven工程</li><li>引入依赖</li><li>创建主程序</li><li>编写业务</li><li>测试</li></ul><h2 id="Springboot新特性"><a href="#Springboot新特性" class="headerlink" title="Springboot新特性"></a>Springboot新特性</h2><h3 id="依赖管理"><a href="#依赖管理" class="headerlink" title="依赖管理"></a>依赖管理</h3><ul><li>父项目做依赖管理</li><li>开发导入starter场景启动器</li><li>无需关注版本号，自动版本仲裁</li></ul><h3 id="自动配置"><a href="#自动配置" class="headerlink" title="自动配置"></a>自动配置</h3><ul><li>自动配好Tomcat<ul><li>引入Tomcat依赖</li><li>配置Tomcat</li></ul></li><li>自动配好SpringMVC<ul><li>引入SpringMVC全套组件</li><li>自动配好SpringMVC常用组件（功能）</li></ul></li><li>自动配好Web常见功能，如：字符编码问题<ul><li>Springboot帮我们配置好了所有web开发的常见场景</li></ul></li><li>默认的包结构<ul><li>主程序所在包及其下面的所有子包里面的组件都会被默认扫描进来</li><li>无需以前的包扫描配置</li><li>想要改变扫描路径，<code>@SpringBootApplication(scanBasePackages=&quot;XXX.xxx&quot;)</code><ul><li>或者<code>@ComponentScan</code>指定扫描路径</li></ul></li></ul></li><li>按需加载所有自动配置项<ul><li>非常多的starter</li><li>引入哪些场景这个场景的自动配置才会开启</li><li>Springboot所有的自动配置功能都在<code>spring-boot-autoconfigure</code>包下</li></ul></li><li>……</li></ul><h2 id="请求（request）处理"><a href="#请求（request）处理" class="headerlink" title="请求（request）处理"></a>请求（request）处理</h2><ul><li><code>xxxMapping(&quot;xxx&quot;)</code></li><li>Rest风格支持（使用HTTP请求方式动词表示对资源的操作）<ul><li>以前：<code>/getUser</code>    获取用户    <code>/deleteUser</code>     删除用户    <code>/updateUser</code>     修改用户    <code>/saveUser</code>     新增用户</li><li>现在：<code>/user</code>    GET-获取    DELETE-删除    PUT-修改    POST-新增 <ul><li><code>@GetMapping(&quot;/user&quot;)</code>    <code>@DeleteMapping(&quot;/user&quot;)</code>    <code>@PutMapping(&quot;/user&quot;)</code>    <code>@PostMapping(&quot;/user&quot;)</code></li></ul></li></ul></li></ul><h1 id="人员管理模块案例演示"><a href="#人员管理模块案例演示" class="headerlink" title="人员管理模块案例演示"></a>人员管理模块案例演示</h1><h2 id="数据库表结构介绍"><a href="#数据库表结构介绍" class="headerlink" title="数据库表结构介绍"></a>数据库表结构介绍</h2><ul><li><p>workers：人员信息</p></li><li><p>title：职称信息</p></li><li><p>department：部门信息</p></li></ul><h2 id="持久层框架整合（MybatisPlus）"><a href="#持久层框架整合（MybatisPlus）" class="headerlink" title="持久层框架整合（MybatisPlus）"></a>持久层框架整合（MybatisPlus）</h2><ul><li>添加pom依赖</li></ul><h2 id="代码自动生成"><a href="#代码自动生成" class="headerlink" title="代码自动生成"></a>代码自动生成</h2><ul><li>编写配置文件（官网）</li><li>自动生成</li></ul><h2 id="接口文档框架整合（Swagger）"><a href="#接口文档框架整合（Swagger）" class="headerlink" title="接口文档框架整合（Swagger）"></a>接口文档框架整合（Swagger）</h2><ul><li>添加pom依赖</li><li>编写配置文件</li><li>对应的接口上方加上注解</li></ul><h2 id="人员数据的增、删、改、查方法编写"><a href="#人员数据的增、删、改、查方法编写" class="headerlink" title="人员数据的增、删、改、查方法编写"></a>人员数据的增、删、改、查方法编写</h2><ul><li>查询workers表所有数据<ul><li><code>getWorkersList()</code>    <code>@GetMapping(&quot;/getWorkersList&quot;)</code></li></ul></li><li>获取人员列表数据<ul><li><code>getWorkersInfoList()</code>    <code>@GetMapping(&quot;/getWorkersInfoList&quot;)</code></li></ul></li><li>根据id查询一条人员数据<ul><li><code>getWorkerOne(String id)</code>    <code>@GetMapping(&quot;/getWorkerOne/&#123;id&#125;&quot;)</code></li></ul></li><li>条件查询人员数据<ul><li><code>getWorkersCondition(Workers workers)</code>    <code>@PostMapping(&quot;/getWorkersCondition&quot;)</code></li></ul></li><li>新增人员数据<ul><li><code>addWorker(Workers workers)</code>    <code>@PostMapping(&quot;/addWorker&quot;)</code></li></ul></li><li>修改人员数据<ul><li><code>updateWorker(Workers workers)</code>    <code>@PutMapping(&quot;/updateWorker&quot;)</code></li></ul></li><li>根据id删除人员数据<ul><li><code>deleteWorker(String id)</code>    <code>@DeleteMapping(&quot;/deleteWorker/&#123;id&#125;&quot;)</code></li></ul></li></ul><h1 id="项目打包操作演示"><a href="#项目打包操作演示" class="headerlink" title="项目打包操作演示"></a>项目打包操作演示</h1><p>项目根目录下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package</span><br></pre></td></tr></table></figure><p>jar包所在目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar xxx.jar</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;框架介绍&quot;&gt;&lt;a href=&quot;#框架介绍&quot; class=&quot;headerlink&quot; title=&quot;框架介绍&quot;&gt;&lt;/a&gt;框架介绍&lt;/h1&gt;&lt;h2 id=&quot;Spring家族框架简介&quot;&gt;&lt;a href=&quot;#Spring家族框架简介&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    
    <category term="Springboot" scheme="http://example.com/tags/Springboot/"/>
    
    <category term="框架" scheme="http://example.com/tags/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="后端" scheme="http://example.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Springboot（三）实战模块</title>
    <link href="http://example.com/2022/02/21/Springboot%EF%BC%88%E4%B8%89%EF%BC%89%E5%AE%9E%E6%88%98%E6%A8%A1%E5%9D%97/"/>
    <id>http://example.com/2022/02/21/Springboot%EF%BC%88%E4%B8%89%EF%BC%89%E5%AE%9E%E6%88%98%E6%A8%A1%E5%9D%97/</id>
    <published>2022-02-21T02:19:30.000Z</published>
    <updated>2022-02-21T02:52:15.321Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h1 id="新建数据库表"><a href="#新建数据库表" class="headerlink" title="新建数据库表"></a>新建数据库表</h1><h1 id="整合持久层框架"><a href="#整合持久层框架" class="headerlink" title="整合持久层框架"></a>整合持久层框架</h1><h1 id="代码自动生成"><a href="#代码自动生成" class="headerlink" title="代码自动生成"></a>代码自动生成</h1><h1 id="整合Swagger插件"><a href="#整合Swagger插件" class="headerlink" title="整合Swagger插件"></a>整合Swagger插件</h1><h1 id="方法编写"><a href="#方法编写" class="headerlink" title="方法编写"></a>方法编写</h1><h2 id="增加操作"><a href="#增加操作" class="headerlink" title="增加操作"></a>增加操作</h2><h2 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a>删除操作</h2><h2 id="查询操作"><a href="#查询操作" class="headerlink" title="查询操作"></a>查询操作</h2><h3 id="列表查询"><a href="#列表查询" class="headerlink" title="列表查询"></a>列表查询</h3><h3 id="单个详情查询"><a href="#单个详情查询" class="headerlink" title="单个详情查询"></a>单个详情查询</h3><h2 id="修改操作"><a href="#修改操作" class="headerlink" title="修改操作"></a>修改操作</h2><h1 id="项目打包操作演示"><a href="#项目打包操作演示" class="headerlink" title="项目打包操作演示"></a>项目打包操作演示</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;h1 id=&quot;新建数据库表&quot;&gt;&lt;a href=&quot;#新建数据库表&quot; class=&quot;headerlink&quot; title=&quot;新建数据库表&quot;&gt;&lt;/a&gt;新</summary>
      
    
    
    
    <category term="Study Notes" scheme="http://example.com/categories/Study-Notes/"/>
    
    
    <category term="Springboot" scheme="http://example.com/tags/Springboot/"/>
    
    <category term="框架" scheme="http://example.com/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>Springboot（二）Web开发</title>
    <link href="http://example.com/2022/02/21/Springboot%EF%BC%88%E4%BA%8C%EF%BC%89Web%E5%BC%80%E5%8F%91/"/>
    <id>http://example.com/2022/02/21/Springboot%EF%BC%88%E4%BA%8C%EF%BC%89Web%E5%BC%80%E5%8F%91/</id>
    <published>2022-02-21T02:19:10.000Z</published>
    <updated>2022-02-21T02:48:58.166Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h1 id="Springboot的Web开发模式"><a href="#Springboot的Web开发模式" class="headerlink" title="Springboot的Web开发模式"></a>Springboot的Web开发模式</h1><h1 id="框架搭建"><a href="#框架搭建" class="headerlink" title="框架搭建"></a>框架搭建</h1><h1 id="Springboot依赖管理"><a href="#Springboot依赖管理" class="headerlink" title="Springboot依赖管理"></a>Springboot依赖管理</h1><h1 id="请求与响应处理流程"><a href="#请求与响应处理流程" class="headerlink" title="请求与响应处理流程"></a>请求与响应处理流程</h1><h2 id="请求（request）流程"><a href="#请求（request）流程" class="headerlink" title="请求（request）流程"></a>请求（request）流程</h2><h2 id="响应（response）流程"><a href="#响应（response）流程" class="headerlink" title="响应（response）流程"></a>响应（response）流程</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;h1 id=&quot;Springboot的Web开发模式&quot;&gt;&lt;a href=&quot;#Springboot的Web开发模式&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="Study Notes" scheme="http://example.com/categories/Study-Notes/"/>
    
    
    <category term="Springboot" scheme="http://example.com/tags/Springboot/"/>
    
    <category term="框架" scheme="http://example.com/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>Springboot（一）框架介绍</title>
    <link href="http://example.com/2022/02/21/Springboot%EF%BC%88%E4%B8%80%EF%BC%89%E6%A1%86%E6%9E%B6%E4%BB%8B%E7%BB%8D/"/>
    <id>http://example.com/2022/02/21/Springboot%EF%BC%88%E4%B8%80%EF%BC%89%E6%A1%86%E6%9E%B6%E4%BB%8B%E7%BB%8D/</id>
    <published>2022-02-21T01:08:44.000Z</published>
    <updated>2022-06-02T01:28:34.575Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我决定综合之前看过的两个<strong>Springboot</strong>系列视频，做一个简单的梳理，将之前学到的框架本身的知识点以及实战内容回顾一遍，便于摸清整个知识脉络，这对之后的工作也有好处，同时更加熟悉如何搭建系统架构。</p><p>附上之前看的两个<strong>Springboot</strong>视频：</p><ul><li>该视频注重SpringBoot原理讲解，部分章节较为枯燥但很精彩：<a href="https://www.bilibili.com/video/BV19K4y1L7MT" title="尚硅谷Springboot雷丰阳">尚硅谷雷神SpringBoot2零基础入门springboot全套完整版（spring boot2）</a></li><li>该视频是微服务实战视频，后端用Springboot搭建，没有原理讲解，但是可以学习到整合各种框架的方法：<a href="https://www.bilibili.com/video/BV1dQ4y1A75e" title="谷粒学院">尚硅谷_谷粒学苑-微服务+全栈在线教育实战项目</a></li></ul><h1 id="时代背景"><a href="#时代背景" class="headerlink" title="时代背景"></a>时代背景</h1><h1 id="框架简述"><a href="#框架简述" class="headerlink" title="框架简述"></a>框架简述</h1><h1 id="Spring家族框架简介"><a href="#Spring家族框架简介" class="headerlink" title="Spring家族框架简介"></a>Spring家族框架简介</h1><h2 id="Spring框架"><a href="#Spring框架" class="headerlink" title="Spring框架"></a>Spring框架</h2><h3 id="Spring能做什么"><a href="#Spring能做什么" class="headerlink" title="Spring能做什么"></a>Spring能做什么</h3><h1 id="Springboot新特性"><a href="#Springboot新特性" class="headerlink" title="Springboot新特性"></a>Springboot新特性</h1><h2 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h2><h2 id="自动配置"><a href="#自动配置" class="headerlink" title="自动配置"></a>自动配置</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;我决定综合之前看过的两个&lt;strong&gt;Springboot&lt;/strong&gt;系列视频，做一个简单的梳理，将之前学到的框架本身的知识点以及实</summary>
      
    
    
    
    <category term="Study Notes" scheme="http://example.com/categories/Study-Notes/"/>
    
    
    <category term="Springboot" scheme="http://example.com/tags/Springboot/"/>
    
    <category term="框架" scheme="http://example.com/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>CSS实现元素垂直居中方案</title>
    <link href="http://example.com/2022/02/16/CSS%E5%AE%9E%E7%8E%B0%E5%85%83%E7%B4%A0%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E6%96%B9%E6%A1%88/"/>
    <id>http://example.com/2022/02/16/CSS%E5%AE%9E%E7%8E%B0%E5%85%83%E7%B4%A0%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E6%96%B9%E6%A1%88/</id>
    <published>2022-02-16T03:34:07.000Z</published>
    <updated>2022-02-16T07:01:08.205Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>对我来说，实现元素水平居中容易实现，无非就是<code>text-align: center</code>，当然这种方法简单，但也有处理不了的情景，这个时候一般通过<code>margin-left: xxxpx</code>解决。</p><p>元素垂直居中较难实现，之前做微信小程序开发的时候，对<strong>html</strong>与<strong>CSS</strong>一知半解，视频中使用<code>align-items: center</code>与<code>justify-content: center</code>实现元素的水平竖直居中，当时我也不知道哪个对应的是水平，哪个对应竖直。之后在开发过程中遇到想要让元素水平竖直居中的场景时，添加两条语句都不生效。今天查阅资料才知道需要让居中元素的父元素变成<code>flex</code>布局。</p><p>因为知识掌握不熟练，需要每次在网上百度，之前碰到过很妙的解决办法，但是没有记录下来，而且个人觉得网上总结的不够简练。</p><p>总而言之，针对元素的竖直居中的CSS代码实现，今天整理三种方式，以后遇到更加复杂的业务场景，还需要尝试别的方式，也会更新这编文章。至于水平居中，有时间的话会记录。</p><h1 id="利用绝对定位方式"><a href="#利用绝对定位方式" class="headerlink" title="利用绝对定位方式"></a>利用绝对定位方式</h1><p>该方法适用于不知道自己高度与父容器高度的情况，利用<strong>绝对定位</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parentElement</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.childElement</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法将父容器设置成<code>relative</code>定位，自己设置成<code>absolute</code>定位。利用<code>top</code>与<code>transform</code>调整垂直位置</p><h1 id="只需要相对定位"><a href="#只需要相对定位" class="headerlink" title="只需要相对定位"></a>只需要相对定位</h1><p>若父容器下只有一个元素，且父元素设置了高度，则只需要使用<strong>相对定位</strong>即可</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parentElement</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.childElement</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法需要知道父容器高度，不用为父容器设置<code>position</code>属性，只需要给自己设置<code>relative</code>定位即可。</p><h1 id="利用Flex布局"><a href="#利用Flex布局" class="headerlink" title="利用Flex布局"></a>利用Flex布局</h1><p>话不多说，<strong>Flex</strong>布局一劳永逸。</p><p>该方法可能出现对老式浏览器的兼容问题，目前没尝试过。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parentElement</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;<span class="comment">/*Flex布局*/</span></span><br><span class="line">    <span class="attribute">display</span>: -webkit-flex; <span class="comment">/* Safari */</span></span><br><span class="line">    <span class="attribute">align-items</span>: center;<span class="comment">/*指定垂直居中*/</span></span><br><span class="line">    <span class="attribute">justify-content</span>: center;<span class="comment">/*指定水平居中*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的核心是<strong>Flex</strong>布局，不是<code>align-items: center</code>这一句，这次终于搞懂了之前样式不生效的原因。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;对我来说，实现元素水平居中容易实现，无非就是&lt;code&gt;text-align: center&lt;/code&gt;，当然这种方法简单，但也有处理不了</summary>
      
    
    
    
    <category term="Study Notes" scheme="http://example.com/categories/Study-Notes/"/>
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Hexo文章撰写与MarkDown语法</title>
    <link href="http://example.com/2022/02/09/Hexo%E6%96%87%E7%AB%A0%E6%92%B0%E5%86%99%E4%B8%8EMarkDown%E8%AF%AD%E6%B3%95/"/>
    <id>http://example.com/2022/02/09/Hexo%E6%96%87%E7%AB%A0%E6%92%B0%E5%86%99%E4%B8%8EMarkDown%E8%AF%AD%E6%B3%95/</id>
    <published>2022-02-09T09:19:32.000Z</published>
    <updated>2022-02-21T01:16:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h1><p>hexo根目录下打开控制台或git bash，输入以下命令创建文章，其中<code>title</code>为文章标题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &quot;title&quot;</span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &quot;Hexo语法&quot;</span><br></pre></td></tr></table></figure><p>创建成功后，会在<code>source/_post</code>文件夹下创建一个文件，命名为<code>title.md</code>，随后用Typora进行编辑即可编写文章。</p><h1 id="文件变量（Front-matter）"><a href="#文件变量（Front-matter）" class="headerlink" title="文件变量（Front-matter）"></a>文件变量（Front-matter）</h1><p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2013/7/13 20:46:25</span><br><span class="line">---</span><br></pre></td></tr></table></figure></blockquote><ul><li><code>tags</code>：标签</li><li><code>categories</code>：分类</li><li><code>date</code>：建立日期</li><li><code>updated</code>：更新日期</li></ul><h1 id="编写文章（基于MarkDown）"><a href="#编写文章（基于MarkDown）" class="headerlink" title="编写文章（基于MarkDown）"></a>编写文章（基于MarkDown）</h1><h2 id="MarkDown简介"><a href="#MarkDown简介" class="headerlink" title="MarkDown简介"></a>MarkDown简介</h2><blockquote><p>Markdown 是一种可以使用普通文本编辑器编写的 <strong>标记语言</strong>，通过简单的 <strong>标记语法</strong>，它可以使普通文本内容具有一定的格式</p><p>基于 Markdown 语法的简洁性，它已经成为目前世界上最流行的用于书写博客的语言</p></blockquote><h2 id="MarkDown语法"><a href="#MarkDown语法" class="headerlink" title="MarkDown语法"></a>MarkDown语法</h2><p>推荐一款简洁易用的 Markdown 编辑器 —— <strong>Typora</strong>，它不仅支持原生的语法，也支持对应的快捷键，更重要的是它还可以 <strong>实时预览</strong></p><p>附上Typora<a href="https://www.typora.io/">下载地址</a></p><p>以下介绍一些常用的MarkDown语法与对应快捷键</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p><strong>（推荐）MarkDown语法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><p><strong>Typora快捷键:</strong></p><p>Ctrl+1：一级标题</p><p>Ctrl+2：二级标题</p><p>Ctrl+3：三级标题</p><p>Ctrl+4：四级标题</p><p>Ctrl+5：五级标题</p><p>Ctrl+6 ：六级标题</p><p>Ctrl+0：段落</p><h3 id="粗体、斜体、删除线与下划线"><a href="#粗体、斜体、删除线与下划线" class="headerlink" title="粗体、斜体、删除线与下划线"></a>粗体、斜体、删除线与下划线</h3><blockquote><p><em>斜体</em><br><strong>粗体</strong><br><em><strong>加粗斜体</strong></em><br><del>删除线</del></p></blockquote><p><strong>（推荐）MarkDown语法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*斜体*</span><br><span class="line">**粗体**</span><br><span class="line">***加粗斜体***</span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure><p><strong>Typora 快捷键：</strong></p><p>Ctrl+I：斜体</p><p>Ctrl+B：粗体</p><p>Ctrl+U：下划线</p><p>Alt+Shift+5：删除线</p><h3 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h3><blockquote><p>文字引用</p></blockquote><p><strong>（推荐）MarkDown语法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 文字引用</span><br></pre></td></tr></table></figure><p><strong>Typora 快捷键：</strong> Ctrl+Shift+Q</p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><blockquote><p><code>行内代码</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">多行代码</span><br></pre></td></tr></table></figure></blockquote><p><strong>（推荐）Markdown 语法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">`行内代码`</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">多行代码</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p><strong>Typora 快捷键：</strong></p><p>行内代码：Ctrl+Shift+&#96;</p><p>多行代码：Ctrl+Shift+K</p><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><blockquote><p>方法一：</p><hr><p>方法二：</p><hr></blockquote><p><strong>（推荐）Markdown 语法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">方法一：</span><br><span class="line">---</span><br><span class="line">方法二：</span><br><span class="line">***</span><br></pre></td></tr></table></figure><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><blockquote><ol><li>有序列表项</li></ol><ul><li>无序列表项</li></ul><ul><li>无序列表项</li></ul><ul><li>无序列表项</li></ul></blockquote><p><strong>（推荐）Markdown 语法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. 有序列表项</span><br><span class="line"></span><br><span class="line">* 无序列表项</span><br><span class="line"></span><br><span class="line">+ 无序列表项</span><br><span class="line"></span><br><span class="line">- 无序列表项</span><br></pre></td></tr></table></figure><p><strong>Typora 快捷键：</strong></p><p>有序列表项：Ctrl+Shift+[</p><p>无序列表项：Ctrl+Shift+]</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><table><thead><tr><th>表头1</th><th>表头2</th><th>表头3</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td><td>单元格</td></tr></tbody></table><p><strong>（推荐）Markdown 语法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">|表头1|表头2|表头3|</span><br><span class="line">|-|-|-|</span><br><span class="line">|单元格|单元格|单元格|</span><br></pre></td></tr></table></figure><p><strong>Typora 快捷键：</strong> Ctrl+T</p><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><blockquote><p><a href="https://ecptaro.github.io/" title="示例链接">示例链接</a></p><p><a href="https://ecptaro.github.io/">https://ecptaro.github.io</a></p></blockquote><p><strong>（推荐）Markdown语法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">方法一：[链接文字](链接地址 &quot;连接描述&quot;)</span><br><span class="line">例如：[示例链接](https://ecptaro.github.io &quot;示例链接&quot;)</span><br><span class="line"></span><br><span class="line">方法二：&lt;链接地址&gt;</span><br><span class="line">例如：&lt;https://ecptaro.github.io&gt;</span><br></pre></td></tr></table></figure><p><strong>Typora快捷键：</strong> Ctrl+K</p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><blockquote><img src="https://ecptaro.github.io/avatar/avatar.jpg" alt="示例图片" title="示例图片" style="zoom: 25%;" /></blockquote><p><strong>（推荐）Markdown语法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![图片文字](图片地址 &quot;图片描述&quot;)</span><br><span class="line">例如：![示例图片](https://ecptaro.github.io/avatar/avatar.jpg &quot;示例图片&quot;)</span><br></pre></td></tr></table></figure><p><strong>Typora快捷键：</strong> Ctrl+Shift+I</p><h1 id="编写后流程"><a href="#编写后流程" class="headerlink" title="编写后流程"></a>编写后流程</h1><ul><li><code>$ hexo clean</code>：清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</li><li><code>$ hexo g</code>：生成静态文件</li><li><code>$ hexo d</code>：文件生成后立即将网站部署到远端</li></ul><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><p>本站引用<a href="https://github.com/fi3ework/hexo-theme-archer" title="archer主题">archer主题</a>，常见问题主要分为两类</p><h2 id="hexo编写过程"><a href="#hexo编写过程" class="headerlink" title="hexo编写过程"></a>hexo编写过程</h2><p>请查阅<strong>hexo官方网站-文档-基本操作板块</strong>，<a href="https://hexo.io/zh-cn/docs/writing" title="hexo官方文档">hexo官方文档</a></p><h2 id="archer适配"><a href="#archer适配" class="headerlink" title="archer适配"></a>archer适配</h2><p>请查阅archer这个 <a href="https://github.com/fi3ework/hexo-theme-archer/wiki" title="archer主题">wiki页面</a>，该页面包含所有的archer文档，包括<strong>主题配置</strong>、<strong>二次开发</strong>等。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创建文章&quot;&gt;&lt;a href=&quot;#创建文章&quot; class=&quot;headerlink&quot; title=&quot;创建文章&quot;&gt;&lt;/a&gt;创建文章&lt;/h1&gt;&lt;p&gt;hexo根目录下打开控制台或git bash，输入以下命令创建文章，其中&lt;code&gt;title&lt;/code&gt;为文章标题&lt;/p</summary>
      
    
    
    
    <category term="Study Notes" scheme="http://example.com/categories/Study-Notes/"/>
    
    
    <category term="Hexo编写" scheme="http://example.com/tags/Hexo%E7%BC%96%E5%86%99/"/>
    
    <category term="MarkDown语法" scheme="http://example.com/tags/MarkDown%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
</feed>
